// Generated by CoffeeScript 1.6.3
var fn;

fn = require('../parser/js').fn;

module.exports = {
  "default": function(params, isLeaf) {
    var known, parser;
    if (params.phrase == null) {
      return isLeaf(false);
    }
    parser = fn.parser();
    known = false;
    parser.on('closure', function(heap) {
      var closure, depth, doneSig, match, rootFn, statement, _i, _len, _results;
      if (known) {
        return;
      }
      rootFn = heap[0];
      doneSig = rootFn.signature[0];
      depth = 0;
      _results = [];
      for (_i = 0, _len = heap.length; _i < _len; _i++) {
        closure = heap[_i];
        depth++;
        _results.push((function() {
          var _j, _len1, _ref, _results1;
          _ref = closure.statements;
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            statement = _ref[_j];
            if (match = statement.match(new RegExp("" + doneSig + "\\(\\)"))) {
              if (depth === 1) {
                known = true;
                _results1.push(isLeaf(true));
              } else {
                console.log({
                  todo: 'The Scope of DoneSig'
                });
                known = true;
                _results1.push(isLeaf(true));
              }
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    });
    parser.on('end', function() {
      if (known) {
        return;
      }
      return isLeaf(false);
    });
    return parser.parse(params.fn.toString());
  }
};
