// Generated by CoffeeScript 1.6.3
var afterHooks, beforeHooks;

beforeHooks = {
  each: [],
  all: []
};

afterHooks = {
  each: [],
  all: []
};

Object.defineProperty(global, 'before', {
  enumerable: false,
  get: function() {
    return function(opts) {
      if (opts == null) {
        opts = {};
      }
      if (typeof opts.each === 'function') {
        beforeHooks.each.push(opts.each);
      }
      if (typeof opts.all === 'function') {
        return beforeHooks.all.push(opts.all);
      }
    };
  }
});

Object.defineProperty(global, 'after', {
  enumerable: false,
  get: function() {
    return function(opts) {
      if (opts == null) {
        opts = {};
      }
      if (typeof opts.each === 'function') {
        afterHooks.each.push(opts.each);
      }
      if (typeof opts.all === 'function') {
        return afterHooks.all.push(opts.all);
      }
    };
  }
});

module.exports = {
  beforeAll: function(opts, control) {
    return function(done, inject) {
      var afterAll, afterEach, beforeAll, beforeEach;
      beforeEach = beforeHooks.each.pop();
      beforeAll = beforeHooks.all.pop();
      afterEach = afterHooks.each.pop();
      afterAll = afterHooks.all.pop();
      control.beforeEach || (control.beforeEach = beforeEach);
      control.beforeAll || (control.beforeAll = beforeAll);
      control.afterEach || (control.afterEach = afterEach);
      control.afterAll || (control.afterAll = afterAll);
      if (typeof control.beforeAll === 'function') {
        if (!opts.global) {
          return control.beforeAll.call(this, done);
        }
        return control.beforeAll.call(null, done);
      }
      return done();
    };
  },
  beforeEach: function(opts, control) {
    return function(done, inject) {
      var argCount;
      if (typeof inject.args[2] !== 'function') {
        argCount = inject.args.length;
        inject.args[2] = inject.args[1] || function() {
          if (argCount === 0) {
            opts.stack.pop();
            return control.defer.resolve();
          }
        };
        if (argCount === 1) {
          console.log("TODO: something useful at phrase: '" + inject.args[0] + "'");
        }
        inject.args[1] = {};
      }
      inject.args[1].defer = inject.defer;
      return done();
    };
  },
  afterAll: function(opts, control) {
    return function(done, inject) {
      if (typeof control.afterAll === 'function') {
        if (!control.global) {
          return control.afterAll.call(this, done);
        }
        return control.afterAll.call(null, done);
      }
      return done();
    };
  }
};
